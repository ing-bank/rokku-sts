akka {
    loggers = ["akka.event.slf4j.Slf4jLogger"]
    loglevel = "DEBUG"
    logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
    actor {
        debug.unhandled = on
    }
    http.server {
       verbose-error-messages = on
       parsing.ignore-illegal-header-for = ["authorization"]
    }
}

rokku {
    sts {
        # Default interface and port to listen on.
        http {
            bind = ${?STS_HOST}
            port = ${?STS_PORT}
        }
        # Default keycloak configuration file and realm public key id
        keycloak {
            realm = ${?KEYCLOAK_REALM}
            realmPublicKeyId = ${?KEYCLOAK_PUBLIC_KEY_ID}
            url = ${?KEYCLOAK_URL}
            resource = ${?KEYCLOAK_CLIENT_ID}
            clientSecret = ${?KEYCLOAK_CLIENT_SECRET}
            adminUsername = ${?KEYCLOAK_ADMIN_USERNAME}
            adminPassword = ${?KEYCLOAK_ADMIN_PASSWORD}
            httpRelativePath = ${?KEYCLOAK_HTTP_RELATIVE_PATH}
            verifyToken {
                checkRealmUrl = ${?KEYCLOAK_CHECK_REALM_URL}
                issuerForList = ${?KEYCLOAK_CHECK_ISSUER_FOR_LIST}
            }
            npaRole = ${?KEYCLOAK_NPA_ROLE}
        }

        defaultTokenSessionHours = ${?STS_DEFAULT_TOKEN_SESSION_HOURS}
        maxTokenSessionHours = ${?STS_MAX_TOKEN_SESSION_HOURS}
        # at least 32 bytes long. Make sure you set your own random key
        masterKey = ${?STS_MASTER_KEY}
        encryptionAlgorithm = ${?STS_ENCRYPTION_ALGORITHM}
        adminGroups = ${?STS_ADMIN_GROUPS}
        decodeSecret = ${?STS_DECODE_SECRET}
    }
}

redis {
    host = ${?REDIS_HOST}
    port = ${?REDIS_PORT}
    username = ${?REDIS_USER}
    password = ${?REDIS_PASSWORD}
}

db-dispatcher {
    type = Dispatcher
    executor = "fork-join-executor"
    fork-join-executor {
        parallelism-min = ${?DB_DISP_PARALLELISM_MIN}
        parallelism-factor = ${?DB_DISP_PARALLELISM_FACTOR}
        paralleism-max = ${?DB_DISP_PARALLELISM_MAX}
    }
    throughput = ${?DB_DISP_THROUGHPUT}
}

vault {
    url = ${?STS_VAULT_URL}
    path = ${?STS_VAULT_SECRET_PATH}
    retries = ${?STS_VAULT_RETRIES}
    read-timeout= ${?STS_VAULT_READ_TIMEOUT}
    open-timeout = ${?STS_VAULT_OPEN_TIMEOUT}
        service-account {
            token-location = ${?STS_SA_TOKEN_LOCATION}
            auth-path = ${?STS_VAULT_AUTH_PATH}
            role= ${?STS_VAULT_ROLE}
        }
}
